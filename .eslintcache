[{"D:\\IDE\\workspace\\frontend\\src\\index.js":"1","D:\\IDE\\workspace\\frontend\\src\\App.js":"2","D:\\IDE\\workspace\\frontend\\src\\serviceWorker.js":"3","D:\\IDE\\workspace\\frontend\\src\\components\\Nav.jsx":"4","D:\\IDE\\workspace\\frontend\\src\\containers\\Layout.jsx":"5","D:\\IDE\\workspace\\frontend\\src\\containers\\SearchInput.jsx":"6","D:\\IDE\\workspace\\frontend\\src\\containers\\NetflixOriginalContainer.jsx":"7","D:\\IDE\\workspace\\frontend\\src\\containers\\TopRatedContainer.jsx":"8","D:\\IDE\\workspace\\frontend\\src\\containers\\TrendContainer.jsx":"9","D:\\IDE\\workspace\\frontend\\src\\containers\\ActionContainer.jsx":"10","D:\\IDE\\workspace\\frontend\\src\\containers\\ComedyContainer.jsx":"11","D:\\IDE\\workspace\\frontend\\src\\containers\\HorrorContainer.jsx":"12","D:\\IDE\\workspace\\frontend\\src\\containers\\RomanceContainer.jsx":"13","D:\\IDE\\workspace\\frontend\\src\\components\\Movie.jsx":"14","D:\\IDE\\workspace\\frontend\\src\\components\\Modal.jsx":"15","D:\\IDE\\workspace\\frontend\\src\\components\\NetflixMovie.jsx":"16","D:\\IDE\\workspace\\frontend\\src\\components\\Footer.jsx":"17","D:\\IDE\\workspace\\frontend\\src\\components\\Header.jsx":"18","D:\\IDE\\workspace\\frontend\\src\\actions\\index.js":"19","D:\\IDE\\workspace\\frontend\\src\\reducers\\index.js":"20","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerNetflixOriginals.js":"21","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerTrending.js":"22","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerComedyMovies.js":"23","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerActionMovies.js":"24","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerRomanceMovies.js":"25","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerDocumentary.js":"26","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerTopRated.js":"27","D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerHorrorMovies.js":"28","D:\\IDE\\workspace\\frontend\\src\\components\\LoginForm.jsx":"29"},{"size":1841,"mtime":1608623765287,"results":"30","hashOfConfig":"31"},{"size":476,"mtime":1608698662757,"results":"32","hashOfConfig":"31"},{"size":5086,"mtime":1608559320351,"results":"33","hashOfConfig":"31"},{"size":2934,"mtime":1608623898504,"results":"34","hashOfConfig":"31"},{"size":1029,"mtime":1608559320322,"results":"35","hashOfConfig":"31"},{"size":2831,"mtime":1608559320331,"results":"36","hashOfConfig":"31"},{"size":855,"mtime":1608559320324,"results":"37","hashOfConfig":"31"},{"size":805,"mtime":1608559320332,"results":"38","hashOfConfig":"31"},{"size":786,"mtime":1608559320333,"results":"39","hashOfConfig":"31"},{"size":1161,"mtime":1608559320318,"results":"40","hashOfConfig":"31"},{"size":794,"mtime":1608559320319,"results":"41","hashOfConfig":"31"},{"size":796,"mtime":1608559320321,"results":"42","hashOfConfig":"31"},{"size":805,"mtime":1608559320328,"results":"43","hashOfConfig":"31"},{"size":895,"mtime":1608559320313,"results":"44","hashOfConfig":"31"},{"size":1028,"mtime":1608559320310,"results":"45","hashOfConfig":"31"},{"size":955,"mtime":1608559320316,"results":"46","hashOfConfig":"31"},{"size":241,"mtime":1608559320307,"results":"47","hashOfConfig":"31"},{"size":1181,"mtime":1608559320309,"results":"48","hashOfConfig":"31"},{"size":4823,"mtime":1608559320305,"results":"49","hashOfConfig":"31"},{"size":1007,"mtime":1608559320337,"results":"50","hashOfConfig":"31"},{"size":334,"mtime":1608559320345,"results":"51","hashOfConfig":"31"},{"size":308,"mtime":1608559320349,"results":"52","hashOfConfig":"31"},{"size":321,"mtime":1608559320340,"results":"53","hashOfConfig":"31"},{"size":881,"mtime":1608559320339,"results":"54","hashOfConfig":"31"},{"size":325,"mtime":1608559320346,"results":"55","hashOfConfig":"31"},{"size":321,"mtime":1608559320343,"results":"56","hashOfConfig":"31"},{"size":310,"mtime":1608559320348,"results":"57","hashOfConfig":"31"},{"size":322,"mtime":1608559320344,"results":"58","hashOfConfig":"31"},{"size":995,"mtime":1608626785627,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1j5fsck",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"D:\\IDE\\workspace\\frontend\\src\\index.js",["129"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport './static/sass/style.scss';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n// import createLogger from 'redux-logger';  \r\n/*\r\n*     index.js파일, 주로 미들웨어를 설정\r\n*          ex) 1. redux-thunk 라이브러리를 설정하거나-> applyMiddleware(thunk) \r\n               2. state의 변경 내역을 관리하기 위해 react-router-redux 라이브러리를 추가하거나, \r\n               3. 디버깅을 위해 react-devtool을 설정하는 일을 주로 한다.  -> window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n*     \r\n* */ \r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//   const logger = createLogger();     \r\n// redux-logger 라이브러리도 설정가능 하지만, 개발자 도구를 더 많이 사용한다.\r\n\r\n/** \r\n *     createStore() 메서드는 리듀서를 파라미터로 받으며 스토어를 생성\r\n *        - 해당 스토어를 변경하거나 변경 감지를 위해서는 subscribe()메서드와 dispatch()메서드 등을 가진 객체 반환 \r\n * */ \r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,     // 스토어는 Provider 객체를 사용해 하위 컴포넌트에 스토어를 전달한다\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\n",["130","131"],"D:\\IDE\\workspace\\frontend\\src\\App.js",[],"D:\\IDE\\workspace\\frontend\\src\\serviceWorker.js",[],"D:\\IDE\\workspace\\frontend\\src\\components\\Nav.jsx",["132"],"import React, { useState } from 'react';\r\nimport NetflixLogo from '../static/images/Naflex_Logo.png';\r\nimport { FiBell, FiGift, FiSmile, FiSearch , FiLogIn} from \"react-icons/fi\";\r\nimport SearchInput from '../containers/SearchInput';\r\nimport {Link, Route, BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\n\r\n/**\r\n *      /src/component 폴더는 React 컴포넌트로 구성된 폴더, 컴포넌트를 보통 도메인별로 구분\r\n *          - container component : 여러개의 프레젠테이션 컴포넌트로 구성, 비즈니스 로직 구현 O\r\n *          - presentational component : 일반적으로 알고 있는 UI컴포넌트, 비즈니스 로직 구현 X\r\n * \r\n*/\r\n\r\nconst Nav = () => {\r\n\r\n    // change nav bg color\r\n    const [scrolling, setScrolling] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if(window.scrollY === 0) {\r\n            setScrolling(false);\r\n        } else if (window.scrollY > 50) {\r\n            setScrolling(true);\r\n        }\r\n    }\r\n    \r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return (\r\n        <Router>\r\n            <nav className={\"navigation \" + (scrolling ? \"black\" : \"\" )}>\r\n                <ul className=\"navigation_container\">\r\n                    <div className=\"navigation_container left\">\r\n                        <img className=\"navigation_container logo\" src={NetflixLogo} alt=\"logo\" />\r\n                        <Link to=\"/\"><div className=\"navigation_container link\">Home</div></Link>\r\n                        <Link to=\"/tvShow\"><div className=\"navigation_container link\">TV Shows</div></Link>\r\n                        <Link to=\"/movies\"><div className=\"navigation_container link\">Movies</div></Link>\r\n                        <Link to=\"/recently\"><div className=\"navigation_container link\">Recently</div></Link>\r\n                        <Link to=\"/myList\"><div className=\"navigation_container link\">My List</div></Link>\r\n                    </div>\r\n                    <div className=\"icons\">\r\n                        <div className=\"search-box\">\r\n                            <SearchInput/>\r\n                            {/* <input onChange={onChange} value={value} className=\"search-txt\" type=\"text\" placeholder=\" Title \"/> */}\r\n                        </div>\r\n                        <div className=\"navigation_container link\"><FiGift/></div>\r\n                        <div className=\"navigation_container link\"><FiBell/></div>\r\n                        <div className=\"navigation_container link\"><FiSmile/></div>\r\n                        <div className=\"navigation_container link\"><Link to=\"/login\"/><FiLogIn/></div>\r\n                    </div>\r\n                </ul>\r\n            </nav>\r\n            <Switch>\r\n                <Route path=\"/\" exact={true}/>\r\n                <Route path=\"/login\" component={LoginForm}/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Nav;","D:\\IDE\\workspace\\frontend\\src\\containers\\Layout.jsx",[],"D:\\IDE\\workspace\\frontend\\src\\containers\\SearchInput.jsx",["133","134","135"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport Modal from '../components/Modal';\r\n\r\n//https://www.themoviedb.org/talk/5c89de1ec3a368645d0cce67 genre 참조\r\n//https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&page=1&primary_release_year=2019&with_genres=28\r\n//`https://api.themoviedb.org/3/discover/movie?{api_key}c&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=adventure%7Caction%7Chorror`\r\n\r\n\r\nconst SearchInput = () => {\r\n\r\n    const [search, setSearch] = useState('');       // useState() : input과, 결과로 나온 영화들을 보여주는 list, 검색 데이터가 들어가는 movieLists 세가지를 상태관리 해준다.\r\n    const [lists, setLists] = useState(false);\r\n    const [movieLists, setMovieLists] = useState([]);\r\n    \r\n    const API_KEY = '2ff32a0ae484b0000c3f1f4f2eb34392';\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&sort_by=&include_adult=false&query=${search}&language=en-US&page=1`;\r\n\r\n    let data = [];\r\n\r\n    const fetch = async () => {\r\n        const response = await axios.get(url);\r\n        data = response.data.results || [];\r\n        setMovieLists(data);\r\n    }\r\n    // onChange() : input에 text를 치면 value값을 통해 상태가 바로바로 업데이트 되면서 해당하는 데이터를 뽑아와 영화목록을 보여주는 list 모달이 띄워진다.\r\n    const onChange = (e) => {\r\n        setSearch(e.target.value);\r\n        fetch(setMovieLists());\r\n        setLists(true);\r\n    }\r\n    \r\n    // hideLists() : 영화 이외에 배경부분을 클릭하면 사라지고 input값이 초기화되도록 하는 setLists(false); setSearch('');를 설정했다.\r\n    const hideLists = () => {\r\n        setLists(false);\r\n        setSearch('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchContainer\">\r\n            <div className=\"inputContainer\">\r\n                <input className=\"search-txt\" type=\"text\" value={search} onChange={onChange} placeholder=\"title\"/>\r\n                <a className=\"searchLogo\"><FiSearch/></a>\r\n            </div>\r\n            <div className={\"searchMovie \" + (lists ? \"show\" : \"\")} onClick={() => hideLists()}>\r\n                <div className=\"listContainer\">\r\n                    { movieLists && movieLists.map(movie => (\r\n                        <List props={movie} key={movie.id}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst List = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"lists\">\r\n                <img src={`https://image.tmdb.org/t/p/original/${props.props.poster_path}`}\r\n                />\r\n            </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SearchInput;","D:\\IDE\\workspace\\frontend\\src\\containers\\NetflixOriginalContainer.jsx",["136"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchNetflixOriginals } from '../actions/index';\r\nimport NetflixMovie from '../components/NetflixMovie';\r\n\r\nconst NetflixOriginalContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(fetchNetflixOriginals());\r\n        }, []);\r\n\r\n        const netflixData = useSelector(state => state.netflixOriginals.movies, []) || [];\r\n\r\n    return (\r\n        <div>\r\n            <p>Netflix Originals</p>\r\n            <div className=\"netflixContainer\">\r\n                { netflixData.results && netflixData.results.map(movie => (\r\n                    <NetflixMovie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NetflixOriginalContainer;","D:\\IDE\\workspace\\frontend\\src\\containers\\TopRatedContainer.jsx",["137"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTopRated } from '../actions/index';\r\nimport Movie from '../components/Movie';\r\n\r\n\r\nconst TopRatedContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(fetchTopRated());\r\n        }, []);\r\n\r\n        const topRatedData = useSelector(state => state.topRated.movies, []) || [];\r\n\r\n    return (\r\n        <div>\r\n            <p>Top Rated Movies</p>\r\n            <div className=\"movieContainer\">\r\n                { topRatedData.results && topRatedData.results.map(movie => (\r\n                    <Movie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopRatedContainer;\r\n","D:\\IDE\\workspace\\frontend\\src\\containers\\TrendContainer.jsx",["138"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTrending } from '../actions/index';\r\nimport Movie from '../components/Movie';\r\n\r\nconst TrendContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(fetchTrending());\r\n        }, []);\r\n\r\n        const TrendData = useSelector(state => state.trending.movies, []) || [];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>Trend Movies</p>  \r\n            <div className=\"movieContainer\">\r\n                { TrendData.results && TrendData.results.map(movie => (\r\n                    <Movie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendContainer;","D:\\IDE\\workspace\\frontend\\src\\containers\\ActionContainer.jsx",["139"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchActionMovies } from '../actions/index';\r\nimport Movie from '../components/Movie';\r\n/**\r\n *      Api연동은 Redux를 통해 관리하고,\r\n *      Data를 가져오는 액션을 디스패치해 Movie컴포넌트에 해당 영화 정보를 props를 통해 전달해줬다. \r\n */\r\nconst ActionContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();         // 컴포넌트 내에서 dispatch 를 사용 할 수 있다.\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchActionMovies());\r\n    }, []);\r\n\r\n    const actionData = useSelector(state => state.action.movies, []) || [];     // 컴포넌트 내에서 리덕스 스토어 상태에 접근 가능.\r\n    // console.log(actionData.results);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>Action Movies</p>\r\n            <div className=\"movieContainer\">\r\n                { actionData.results && actionData.results.map(movie => (\r\n                    <Movie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionContainer;","D:\\IDE\\workspace\\frontend\\src\\containers\\ComedyContainer.jsx",["140"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchComedyMovies } from '../actions/index';\r\nimport Movie from '../components/Movie';\r\n\r\nconst ComedyContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(fetchComedyMovies());\r\n        }, []);\r\n\r\n        const comedyData = useSelector(state => state.comedy.movies, []) || [];\r\n\r\n    return (\r\n        <div>\r\n            <p>Comedy Movies</p>\r\n            <div className=\"movieContainer\">\r\n                { comedyData.results && comedyData.results.map(movie => (\r\n                    <Movie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComedyContainer;","D:\\IDE\\workspace\\frontend\\src\\containers\\HorrorContainer.jsx",["141"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchHorrorMovies } from '../actions/index';\r\nimport Movie from '../components/Movie';\r\n\r\nconst HorrorContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(fetchHorrorMovies());\r\n        }, []);\r\n\r\n        const horrorData = useSelector(state => state.horror.movies, []) || [];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>Horror Movies</p>\r\n            <div className=\"movieContainer\">\r\n                { horrorData.results && horrorData.results.map(movie => (\r\n                    <Movie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorrorContainer;","D:\\IDE\\workspace\\frontend\\src\\containers\\RomanceContainer.jsx",["142"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchRomanceMovies } from '../actions/index';\r\nimport Movie from '../components/Movie';\r\n\r\nconst RomanceContainer = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            dispatch(fetchRomanceMovies());\r\n        }, []);\r\n\r\n        const romanceData = useSelector(state => state.romance.movies, []) || [];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>Romance Movies</p>\r\n            <div className=\"movieContainer\">\r\n                { romanceData.results && romanceData.results.map(movie => (\r\n                    <Movie props={movie} key={movie.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RomanceContainer;","D:\\IDE\\workspace\\frontend\\src\\components\\Movie.jsx",[],"D:\\IDE\\workspace\\frontend\\src\\components\\Modal.jsx",[],"D:\\IDE\\workspace\\frontend\\src\\components\\NetflixMovie.jsx",[],"D:\\IDE\\workspace\\frontend\\src\\components\\Footer.jsx",[],"D:\\IDE\\workspace\\frontend\\src\\components\\Header.jsx",[],"D:\\IDE\\workspace\\frontend\\src\\actions\\index.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\index.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerNetflixOriginals.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerTrending.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerComedyMovies.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerActionMovies.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerRomanceMovies.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerDocumentary.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerTopRated.js",[],"D:\\IDE\\workspace\\frontend\\src\\reducers\\reducerHorrorMovies.js",[],"D:\\IDE\\workspace\\frontend\\src\\components\\LoginForm.jsx",[],{"ruleId":"143","severity":1,"message":"144","line":20,"column":7,"nodeType":"145","messageId":"146","endLine":20,"endColumn":22},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"143","severity":1,"message":"151","line":3,"column":35,"nodeType":"145","messageId":"146","endLine":3,"endColumn":43},{"ruleId":"143","severity":1,"message":"152","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":44,"column":17,"nodeType":"155","endLine":44,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":62,"column":17,"nodeType":"155","endLine":63,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":12,"column":12,"nodeType":"160","endLine":12,"endColumn":14,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"159","line":13,"column":12,"nodeType":"160","endLine":13,"endColumn":14,"suggestions":"162"},{"ruleId":"158","severity":1,"message":"159","line":12,"column":12,"nodeType":"160","endLine":12,"endColumn":14,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"159","line":15,"column":8,"nodeType":"160","endLine":15,"endColumn":10,"suggestions":"164"},{"ruleId":"158","severity":1,"message":"159","line":12,"column":12,"nodeType":"160","endLine":12,"endColumn":14,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"159","line":12,"column":12,"nodeType":"160","endLine":12,"endColumn":14,"suggestions":"166"},{"ruleId":"158","severity":1,"message":"159","line":12,"column":12,"nodeType":"160","endLine":12,"endColumn":14,"suggestions":"167"},"no-unused-vars","'composeEnhancer' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'FiSearch' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["170"],["171"],["172"],["173"],["174"],["175"],["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"177","fix":"181"},{"desc":"177","fix":"182"},{"desc":"177","fix":"183"},{"desc":"177","fix":"184"},"Update the dependencies array to be: [dispatch]",{"range":"185","text":"186"},{"range":"187","text":"186"},{"range":"188","text":"186"},{"range":"189","text":"186"},{"range":"190","text":"186"},{"range":"191","text":"186"},{"range":"192","text":"186"},[386,388],"[dispatch]",[356,358],[351,353],[499,501],[360,362],[360,362],[363,365]]